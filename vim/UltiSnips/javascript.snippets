snippet fn "JS Function" wm
function $1($2) {
	$0
}
endsnippet
snippet todo "Inline To-Do comment" w
// TODO NJH: $0
endsnippet
snippet log "Console Log" w
console.log($0);
endsnippet
snippet dfd "jQuery Deferred" w
var dfd = $.Deferred();

$0

return dfd;
endsnippet
snippet .prms "jQuery Promise response" i
.done(function(data, textStatus, jqXHR) {
})
.fail(function(jqXHR, textStatus, errorThrown) {
})
.always(function() {
});
endsnippet
snippet rmodule "Revealing Module Pattern" wm
var $1 = function ($2) {
	$0

	// Reveal public pointers to private functions and properties
	return {
	};
}();
endsnippet
snippet for "JS For loop" wm
for (var i = $1, max = $2; i < max; i +=1) {
	$0
}
endsnippet
snippet ko.cmd "Knockout Command" w
ko.command({
	execute: function () {
		$0
	},
	canExecute: function () {
		return true;
	}
});
endsnippet
snippet ko.acmd "Knockout Async Command" w
ko.asyncCommand({
	execute: function (complete) {
		$0
		return true;
	},
	canExecute: function (isExecuting) {
		return true;
	}
});
endsnippet
snippet ko.obs "Knockout Observable" wm
ko.observable($0);
endsnippet
snippet ko.ary "Knockout Observable Array" wm
ko.observableArray($0);
endsnippet
snippet ko.comp "Knockout Computed" wm
ko.computed(function () {
	return$0;
});
endsnippet
snippet ko.pcomp "Knockout Pure Computed" wm
ko.pureComputed(function () {
	return$0;
});
endsnippet
snippet ko.wpcomp "Knockout Component (Webpack)" wm
function $1 ($2) {
	var self = this;

	// Data
	$0

	// Behaviors

	// Exports
	return this;
}

module.exports = {
	viewModel: $1,
	template: require('./$3.html')
};
endsnippet
